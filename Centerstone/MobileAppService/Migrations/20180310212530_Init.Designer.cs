// <auto-generated />
using Centerstone.MobileAppService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Centerstone.MobileAppService.Migrations
{
    [DbContext(typeof(HifContext))]
    [Migration("20180310212530_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Centerstone.MobileAppService.Data.HifApplication", b =>
                {
                    b.Property<long>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ApplicationID");

                    b.Property<decimal>("AnnualHeatCost");

                    b.Property<bool>("BackupHeatCost")
                        .HasColumnType("bit");

                    b.Property<decimal?>("CostMonthly");

                    b.Property<int?>("DurationMonth");

                    b.Property<int?>("DurationYears");

                    b.Property<string>("Email");

                    b.Property<string>("HeatSources")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("HifJsonData");

                    b.Property<decimal>("HouseholdIncome");

                    b.Property<string>("HousingStatus")
                        .HasMaxLength(30);

                    b.Property<string>("HousingType")
                        .HasMaxLength(30);

                    b.Property<string>("LiveCity")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("LiveState")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("LiveStreetAddress")
                        .IsRequired();

                    b.Property<string>("LiveZipCode")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("MailingAddress");

                    b.Property<string>("MailingCity")
                        .HasMaxLength(30);

                    b.Property<string>("MailingState")
                        .HasMaxLength(30);

                    b.Property<string>("MailingZipCode")
                        .HasMaxLength(30);

                    b.Property<string>("MessagePhone")
                        .HasMaxLength(20);

                    b.Property<int?>("NumberBedrooms");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20);

                    b.Property<bool>("TargetGroup1")
                        .HasColumnType("bit");

                    b.Property<bool>("TargetGroup2")
                        .HasColumnType("bit");

                    b.Property<decimal>("TotalAnnualElectricCosts");

                    b.Property<decimal?>("TotalEnergyCost");

                    b.Property<int>("TotalPeople");

                    b.Property<string>("UniqueAppId")
                        .IsRequired();

                    b.Property<bool>("UsedSurrogate")
                        .HasColumnType("bit");

                    b.HasKey("ApplicationId");

                    b.ToTable("HifApplication");
                });

            modelBuilder.Entity("Centerstone.MobileAppService.Data.HouseholdMembers", b =>
                {
                    b.Property<long>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PersonID");

                    b.Property<long>("ApplicationId")
                        .HasColumnName("ApplicationID");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<bool>("Disability")
                        .HasColumnType("bit");

                    b.Property<string>("Education");

                    b.Property<string>("Ethnicity")
                        .HasMaxLength(50);

                    b.Property<string>("FullName")
                        .IsRequired();

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<bool>("HealthInsurance")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("bit");

                    b.Property<bool>("MilitaryVeteran")
                        .HasColumnType("bit");

                    b.Property<bool>("PaidAdult")
                        .HasColumnType("bit");

                    b.Property<string>("Race");

                    b.Property<string>("RelationToPrimary")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Ssn")
                        .IsRequired()
                        .HasColumnName("SSN")
                        .HasMaxLength(11);

                    b.HasKey("PersonId");

                    b.HasIndex("ApplicationId");

                    b.ToTable("HouseholdMembers");
                });

            modelBuilder.Entity("Centerstone.MobileAppService.Data.Images", b =>
                {
                    b.Property<long>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ImageID");

                    b.Property<string>("ApplicantGuid")
                        .HasColumnName("ApplicantGUID");

                    b.Property<long>("ApplicationId")
                        .HasColumnName("ApplicationID");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ImageType")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("UniqueImageId")
                        .IsRequired();

                    b.HasKey("ImageId");

                    b.HasIndex("ApplicationId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Centerstone.MobileAppService.Data.IncomeRules", b =>
                {
                    b.Property<int>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RowID");

                    b.Property<decimal>("HouseholdAdjust")
                        .HasColumnType("decimal(4, 2)");

                    b.Property<int>("HouseholdSize");

                    b.Property<decimal>("MaxIncome");

                    b.HasKey("RowId");

                    b.ToTable("IncomeRules");
                });

            modelBuilder.Entity("Centerstone.MobileAppService.Data.IncomeTypes", b =>
                {
                    b.Property<int>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RowID");

                    b.Property<long>("ApplicationId")
                        .HasColumnName("ApplicationID")
                        .HasColumnType("bigint");

                    b.Property<bool>("ChildSupport")
                        .HasColumnType("bit");

                    b.Property<bool>("EarnedIncome")
                        .HasColumnType("bit");

                    b.Property<bool>("Ga")
                        .HasColumnName("GA")
                        .HasColumnType("bit");

                    b.Property<bool>("Military")
                        .HasColumnType("bit");

                    b.Property<bool>("Other")
                        .HasColumnType("bit");

                    b.Property<bool>("Pension")
                        .HasColumnType("bit");

                    b.Property<long>("PersonId")
                        .HasColumnName("PersonID")
                        .HasColumnType("bigint");

                    b.Property<bool>("SelfEmployed")
                        .HasColumnType("bit");

                    b.Property<bool>("SocialSecurity")
                        .HasColumnType("bit");

                    b.Property<bool>("Ssi")
                        .HasColumnName("SSI")
                        .HasColumnType("bit");

                    b.Property<bool>("Tanf")
                        .HasColumnName("TANF")
                        .HasColumnType("bit");

                    b.Property<bool>("Unemployment")
                        .HasColumnType("bit");

                    b.Property<bool>("Va")
                        .HasColumnName("VA")
                        .HasColumnType("bit");

                    b.HasKey("RowId");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("PersonId");

                    b.ToTable("IncomeTypes");
                });

            modelBuilder.Entity("Centerstone.MobileAppService.Data.StoredImages", b =>
                {
                    b.Property<int>("RowId")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("ImageData")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<long>("ImageId")
                        .HasColumnName("ImageID");

                    b.HasKey("RowId");

                    b.HasIndex("ImageId");

                    b.ToTable("StoredImages");
                });

            modelBuilder.Entity("Centerstone.MobileAppService.Data.HouseholdMembers", b =>
                {
                    b.HasOne("Centerstone.MobileAppService.Data.HifApplication", "Application")
                        .WithMany("HouseholdMembers")
                        .HasForeignKey("ApplicationId")
                        .HasConstraintName("FK_Hif_Household_AppId");
                });

            modelBuilder.Entity("Centerstone.MobileAppService.Data.Images", b =>
                {
                    b.HasOne("Centerstone.MobileAppService.Data.HifApplication", "Application")
                        .WithMany("Images")
                        .HasForeignKey("ApplicationId")
                        .HasConstraintName("FK_Hif_Images_AppID");
                });

            modelBuilder.Entity("Centerstone.MobileAppService.Data.IncomeTypes", b =>
                {
                    b.HasOne("Centerstone.MobileAppService.Data.HifApplication", "Application")
                        .WithMany("IncomeTypes")
                        .HasForeignKey("ApplicationId")
                        .HasConstraintName("FK_Income_Hif_AppID");

                    b.HasOne("Centerstone.MobileAppService.Data.HouseholdMembers", "Person")
                        .WithMany("IncomeTypes")
                        .HasForeignKey("PersonId")
                        .HasConstraintName("FK_INCOME_Household_Person");
                });

            modelBuilder.Entity("Centerstone.MobileAppService.Data.StoredImages", b =>
                {
                    b.HasOne("Centerstone.MobileAppService.Data.Images", "Image")
                        .WithMany("StoredImages")
                        .HasForeignKey("ImageId")
                        .HasConstraintName("FK_Images_StoredImages_ImageID");
                });
#pragma warning restore 612, 618
        }
    }
}
